---
import client from '@/lib/client'
import { formatDateByTimeZone } from '@/lib/utils'
import { SITE_CONFIG } from '@/config'
import { INTEGRATIONS } from '@/config/integrations'

interface Props {
  class?: string
}

const response = await client.api.github['repo-info'][':owner'][
  ':repository'
].$get({
  param: {
    owner: SITE_CONFIG.author.username,
    repository: INTEGRATIONS.github.repository
  }
})
const data = response.status === 200 ? await response.json() : null

if (!data) return

const date = new Date(data.pushedAt)

const formattedDate = formatDateByTimeZone(date)

const { class: className } = Astro.props
---

{
  data ? (
    <p class:list={['text-xs min-[961px]:self-end', className]}>
      Last updated by {SITE_CONFIG.author.name} <br class='xs:hidden' /> on {formattedDate} UTC+7
    </p>
  ) : (
    // TODO: handle error
    <p>Something went wrong ðŸ˜”</p>
  )
}
