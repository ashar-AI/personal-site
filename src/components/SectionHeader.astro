---
import type { JSX, SVGProps } from 'react'

import { getCustomTransition } from '@/lib/customTransition'

export interface Props {
  /** Icon component to display */
  icon: (props: SVGProps<SVGSVGElement>) => JSX.Element;
  /** Additional class names */
  class?: string;
  /** Whether this is displayed on the home page */
  forHomePage?: boolean;
  /** Section name (e.g., 'Blog', 'Projects') */
  section: string;
  /** Section title */
  title: string;
  /** Section description */
  description: string;
  /** Whether the title contains HTML */
  isTitleHtml?: boolean;
  /** Whether the description contains HTML */
  isDescriptionHtml?: boolean;
}

const {
  class: className,
  forHomePage = false,
  icon: Icon,
  section,
  title,
  description,
  isTitleHtml = false,
  isDescriptionHtml = false
} = Astro.props

const Section = forHomePage ? 'h2' : 'h1'
const Title = forHomePage ? 'h3' : 'h2'
const Container = forHomePage ? 'div' : 'section'
---

<Container class:list={['space-y-6 sm:space-y-8', className]}>
  <div
    transition:animate={getCustomTransition()}
    class='flex w-fit items-center gap-2 rounded-full bg-emerald-950/55 px-4 py-2 text-emerald-300'
  >
    <Icon />
    <Section class='text-sm font-medium tracking-wide max-sm:text-xs'
      >{section}</Section
    >
  </div>
  <Title
    transition:animate={getCustomTransition(0.05)}
    class:list={[
      'font-heading font-semibold leading-none text-zinc-100',
      forHomePage
        ? 'text-[clamp(2rem,7vw,3rem)]'
        : 'text-[clamp(2rem,7vw,3.25rem)]'
    ]}
    set:html={isTitleHtml ? title : undefined}
  >
    {!isTitleHtml && title}
  </Title>
  
  {description && (
    <p
      class='text-zinc-400 max-md:text-sm max-w-3xl'
      transition:animate={getCustomTransition(0.1)}
      set:html={isDescriptionHtml ? description : undefined}
    >
      {!isDescriptionHtml && description}
    </p>
  )}
  
  <slot />
</Container>
